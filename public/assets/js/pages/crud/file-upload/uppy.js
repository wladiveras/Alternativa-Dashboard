/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 47);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./resources/wladi-workspace/js/pages/crud/file-upload/uppy.js":
/*!*********************************************************************!*\
  !*** ./resources/wladi-workspace/js/pages/crud/file-upload/uppy.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(" // Class definition\n\nvar KTUppy = function () {\n  var Tus = Uppy.Tus;\n  var ProgressBar = Uppy.ProgressBar;\n  var StatusBar = Uppy.StatusBar;\n  var FileInput = Uppy.FileInput;\n  var Informer = Uppy.Informer; // to get uppy companions working, please refer to the official documentation here: https://uppy.io/docs/companion/\n\n  var Dashboard = Uppy.Dashboard;\n  var Dropbox = Uppy.Dropbox;\n  var GoogleDrive = Uppy.GoogleDrive;\n  var Instagram = Uppy.Instagram;\n  var Webcam = Uppy.Webcam; // Private functions\n\n  var initUppy1 = function initUppy1() {\n    var id = '#kt_uppy_1';\n    var options = {\n      proudlyDisplayPoweredByUppy: false,\n      target: id,\n      inline: true,\n      replaceTargetContent: true,\n      showProgressDetails: true,\n      note: 'No filetype restrictions.',\n      height: 470,\n      metaFields: [{\n        id: 'name',\n        name: 'Name',\n        placeholder: 'file name'\n      }, {\n        id: 'caption',\n        name: 'Caption',\n        placeholder: 'describe what the image is about'\n      }],\n      browserBackButtonClose: true\n    };\n    var uppyDashboard = Uppy.Core({\n      autoProceed: true,\n      restrictions: {\n        maxFileSize: 1000000,\n        // 1mb\n        maxNumberOfFiles: 5,\n        minNumberOfFiles: 1\n      }\n    });\n    uppyDashboard.use(Dashboard, options);\n    uppyDashboard.use(Tus, {\n      endpoint: 'https://master.tus.io/files/'\n    });\n    uppyDashboard.use(GoogleDrive, {\n      target: Dashboard,\n      companionUrl: 'https://companion.uppy.io'\n    });\n    uppyDashboard.use(Dropbox, {\n      target: Dashboard,\n      companionUrl: 'https://companion.uppy.io'\n    });\n    uppyDashboard.use(Instagram, {\n      target: Dashboard,\n      companionUrl: 'https://companion.uppy.io'\n    });\n    uppyDashboard.use(Webcam, {\n      target: Dashboard\n    });\n  };\n\n  var initUppy2 = function initUppy2() {\n    var id = '#kt_uppy_2';\n    var options = {\n      proudlyDisplayPoweredByUppy: false,\n      target: id,\n      inline: true,\n      replaceTargetContent: true,\n      showProgressDetails: true,\n      note: 'Images and video only, 2â€“3 files, up to 1 MB',\n      height: 470,\n      metaFields: [{\n        id: 'name',\n        name: 'Name',\n        placeholder: 'file name'\n      }, {\n        id: 'caption',\n        name: 'Caption',\n        placeholder: 'describe what the image is about'\n      }],\n      browserBackButtonClose: true\n    };\n    var uppyDashboard = Uppy.Core({\n      autoProceed: true,\n      restrictions: {\n        maxFileSize: 1000000,\n        // 1mb\n        maxNumberOfFiles: 5,\n        minNumberOfFiles: 1,\n        allowedFileTypes: ['image/*', 'video/*']\n      }\n    });\n    uppyDashboard.use(Dashboard, options);\n    uppyDashboard.use(Tus, {\n      endpoint: 'https://master.tus.io/files/'\n    });\n  };\n\n  var initUppy3 = function initUppy3() {\n    var id = '#kt_uppy_3';\n    var uppyDrag = Uppy.Core({\n      autoProceed: true,\n      restrictions: {\n        maxFileSize: 1000000,\n        // 1mb\n        maxNumberOfFiles: 5,\n        minNumberOfFiles: 1,\n        allowedFileTypes: ['image/*', 'video/*']\n      }\n    });\n    uppyDrag.use(Uppy.DragDrop, {\n      target: id + ' .uppy-drag'\n    });\n    uppyDrag.use(ProgressBar, {\n      target: id + ' .uppy-progress',\n      hideUploadButton: false,\n      hideAfterFinish: false\n    });\n    uppyDrag.use(Informer, {\n      target: id + ' .uppy-informer'\n    });\n    uppyDrag.use(Tus, {\n      endpoint: 'https://master.tus.io/files/'\n    });\n    uppyDrag.on('complete', function (file) {\n      var imagePreview = \"\";\n      $.each(file.successful, function (index, value) {\n        var imageType = /image/;\n        var thumbnail = \"\";\n\n        if (imageType.test(value.type)) {\n          thumbnail = '<div class=\"uppy-thumbnail\"><img src=\"' + value.uploadURL + '\"/></div>';\n        }\n\n        var sizeLabel = \"bytes\";\n        var filesize = value.size;\n\n        if (filesize > 1024) {\n          filesize = filesize / 1024;\n          sizeLabel = \"kb\";\n\n          if (filesize > 1024) {\n            filesize = filesize / 1024;\n            sizeLabel = \"MB\";\n          }\n        }\n\n        imagePreview += '<div class=\"uppy-thumbnail-container\" data-id=\"' + value.id + '\">' + thumbnail + ' <span class=\"uppy-thumbnail-label\">' + value.name + ' (' + Math.round(filesize, 2) + ' ' + sizeLabel + ')</span><span data-id=\"' + value.id + '\" class=\"uppy-remove-thumbnail\"><i class=\"flaticon2-cancel-music\"></i></span></div>';\n      });\n      $(id + ' .uppy-thumbnails').append(imagePreview);\n    });\n    $(document).on('click', id + ' .uppy-thumbnails .uppy-remove-thumbnail', function () {\n      var imageId = $(this).attr('data-id');\n      uppyDrag.removeFile(imageId);\n      $(id + ' .uppy-thumbnail-container[data-id=\"' + imageId + '\"').remove();\n    });\n  };\n\n  var initUppy4 = function initUppy4() {\n    var id = '#kt_uppy_4';\n    var uppyDrag = Uppy.Core({\n      autoProceed: false,\n      restrictions: {\n        maxFileSize: 1000000,\n        // 1mb\n        maxNumberOfFiles: 5,\n        minNumberOfFiles: 1\n      }\n    });\n    uppyDrag.use(Uppy.DragDrop, {\n      target: id + ' .uppy-drag'\n    });\n    uppyDrag.use(ProgressBar, {\n      target: id + ' .uppy-progress'\n    });\n    uppyDrag.use(Informer, {\n      target: id + ' .uppy-informer'\n    });\n    uppyDrag.use(Tus, {\n      endpoint: 'https://master.tus.io/files/'\n    });\n    uppyDrag.on('complete', function (file) {\n      var imagePreview = \"\";\n      $.each(file.successful, function (index, value) {\n        var imageType = /image/;\n        var thumbnail = \"\";\n\n        if (imageType.test(value.type)) {\n          thumbnail = '<div class=\"uppy-thumbnail\"><img src=\"' + value.uploadURL + '\"/></div>';\n        }\n\n        var sizeLabel = \"bytes\";\n        var filesize = value.size;\n\n        if (filesize > 1024) {\n          filesize = filesize / 1024;\n          sizeLabel = \"kb\";\n\n          if (filesize > 1024) {\n            filesize = filesize / 1024;\n            sizeLabel = \"MB\";\n          }\n        }\n\n        imagePreview += '<div class=\"uppy-thumbnail-container\" data-id=\"' + value.id + '\">' + thumbnail + ' <span class=\"uppy-thumbnail-label\">' + value.name + ' (' + Math.round(filesize, 2) + ' ' + sizeLabel + ')</span><span data-id=\"' + value.id + '\" class=\"uppy-remove-thumbnail\"><i class=\"flaticon2-cancel-music\"></i></span></div>';\n      });\n      $(id + ' .uppy-thumbnails').append(imagePreview);\n    });\n    var uploadBtn = $(id + ' .uppy-btn');\n    uploadBtn.click(function () {\n      uppyDrag.upload();\n    });\n    $(document).on('click', id + ' .uppy-thumbnails .uppy-remove-thumbnail', function () {\n      var imageId = $(this).attr('data-id');\n      uppyDrag.removeFile(imageId);\n      $(id + ' .uppy-thumbnail-container[data-id=\"' + imageId + '\"').remove();\n    });\n  };\n\n  var initUppy5 = function initUppy5() {\n    // Uppy variables\n    // For more info refer: https://uppy.io/\n    var elemId = 'kt_uppy_5';\n    var id = '#' + elemId;\n    var $statusBar = $(id + ' .uppy-status');\n    var $uploadedList = $(id + ' .uppy-list');\n    var timeout;\n    var uppyMin = Uppy.Core({\n      debug: true,\n      autoProceed: true,\n      showProgressDetails: true,\n      restrictions: {\n        maxFileSize: 1000000,\n        // 1mb\n        maxNumberOfFiles: 5,\n        minNumberOfFiles: 1\n      }\n    });\n    uppyMin.use(FileInput, {\n      target: id + ' .uppy-wrapper',\n      pretty: false\n    });\n    uppyMin.use(Informer, {\n      target: id + ' .uppy-informer'\n    }); // demo file upload server\n\n    uppyMin.use(Tus, {\n      endpoint: 'https://master.tus.io/files/'\n    });\n    uppyMin.use(StatusBar, {\n      target: id + ' .uppy-status',\n      hideUploadButton: true,\n      hideAfterFinish: false\n    });\n    $(id + ' .uppy-FileInput-input').addClass('uppy-input-control').attr('id', elemId + '_input_control');\n    $(id + ' .uppy-FileInput-container').append('<label class=\"uppy-input-label btn btn-light-primary btn-sm btn-bold\" for=\"' + (elemId + '_input_control') + '\">Attach files</label>');\n    var $fileLabel = $(id + ' .uppy-input-label');\n    uppyMin.on('upload', function (data) {\n      $fileLabel.text(\"Uploading...\");\n      $statusBar.addClass('uppy-status-ongoing');\n      $statusBar.removeClass('uppy-status-hidden');\n      clearTimeout(timeout);\n    });\n    uppyMin.on('complete', function (file) {\n      $.each(file.successful, function (index, value) {\n        var sizeLabel = \"bytes\";\n        var filesize = value.size;\n\n        if (filesize > 1024) {\n          filesize = filesize / 1024;\n          sizeLabel = \"kb\";\n\n          if (filesize > 1024) {\n            filesize = filesize / 1024;\n            sizeLabel = \"MB\";\n          }\n        }\n\n        var uploadListHtml = '<div class=\"uppy-list-item\" data-id=\"' + value.id + '\"><div class=\"uppy-list-label\">' + value.name + ' (' + Math.round(filesize, 2) + ' ' + sizeLabel + ')</div><span class=\"uppy-list-remove\" data-id=\"' + value.id + '\"><i class=\"flaticon2-cancel-music\"></i></span></div>';\n        $uploadedList.append(uploadListHtml);\n      });\n      $fileLabel.text(\"Add more files\");\n      $statusBar.addClass('uppy-status-hidden');\n      $statusBar.removeClass('uppy-status-ongoing');\n    });\n    $(document).on('click', id + ' .uppy-list .uppy-list-remove', function () {\n      var itemId = $(this).attr('data-id');\n      uppyMin.removeFile(itemId);\n      $(id + ' .uppy-list-item[data-id=\"' + itemId + '\"').remove();\n    });\n  };\n\n  var initUppy6 = function initUppy6() {\n    var id = '#kt_uppy_6';\n    var options = {\n      proudlyDisplayPoweredByUppy: false,\n      target: id + ' .uppy-dashboard',\n      inline: false,\n      replaceTargetContent: true,\n      showProgressDetails: true,\n      note: 'No filetype restrictions.',\n      height: 470,\n      metaFields: [{\n        id: 'name',\n        name: 'Name',\n        placeholder: 'file name'\n      }, {\n        id: 'caption',\n        name: 'Caption',\n        placeholder: 'describe what the image is about'\n      }],\n      browserBackButtonClose: true,\n      trigger: id + ' .uppy-btn'\n    };\n    var uppyDashboard = Uppy.Core({\n      autoProceed: true,\n      restrictions: {\n        maxFileSize: 1000000,\n        // 1mb\n        maxNumberOfFiles: 5,\n        minNumberOfFiles: 1\n      }\n    });\n    uppyDashboard.use(Dashboard, options);\n    uppyDashboard.use(Tus, {\n      endpoint: 'https://master.tus.io/files/'\n    });\n    uppyDashboard.use(GoogleDrive, {\n      target: Dashboard,\n      companionUrl: 'https://companion.uppy.io'\n    });\n    uppyDashboard.use(Dropbox, {\n      target: Dashboard,\n      companionUrl: 'https://companion.uppy.io'\n    });\n    uppyDashboard.use(Instagram, {\n      target: Dashboard,\n      companionUrl: 'https://companion.uppy.io'\n    });\n    uppyDashboard.use(Webcam, {\n      target: Dashboard\n    });\n  };\n\n  return {\n    // public functions\n    init: function init() {\n      initUppy1();\n      initUppy2();\n      initUppy3();\n      initUppy4();\n      initUppy5();\n      initUppy6();\n      setTimeout(function () {\n        swal.fire({\n          \"title\": \"Notice\",\n          \"html\": \"Uppy demos uses <b>https://master.tus.io/files/</b> URL for resumable upload examples and your uploaded files will be temporarely stored in <b>tus.io</b> servers.\",\n          \"type\": \"info\",\n          \"buttonsStyling\": false,\n          \"confirmButtonClass\": \"btn btn-primary\",\n          \"confirmButtonText\": \"Ok, I understand\",\n          \"onClose\": function onClose(e) {\n            console.log('on close event fired!');\n          }\n        });\n      }, 2000);\n    }\n  };\n}();\n\nKTUtil.ready(function () {\n  KTUppy.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/wladi-workspace/js/pages/crud/file-upload/uppy.js\n");

/***/ }),

/***/ 47:
/*!***************************************************************************!*\
  !*** multi ./resources/wladi-workspace/js/pages/crud/file-upload/uppy.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! D:\TopMais\htdocs_alternativa\resources\wladi-workspace\js\pages\crud\file-upload\uppy.js */"./resources/wladi-workspace/js/pages/crud/file-upload/uppy.js");


/***/ })

/******/ });